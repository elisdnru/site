version: '3.9'
services:
    traefik:
        image: traefik:2.4
        command:
            --providers.docker=true
            --providers.docker.exposedbydefault=false
            --entrypoints.http.address=:80
        ports:
            - "80:80"
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
    site:
        image: ${REGISTRY:-localhost}/site-dev:cache
        build:
            context: ./docker
            dockerfile: development/nginx/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/site-dev:cache
        networks:
            - traefik-public
            - default
        volumes:
            - ./:/app
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.site.rule=Host(`localhost`)
            - traefik.http.routers.site.entrypoints=http
            - traefik.http.services.site.loadbalancer.server.port=80
    site-php-fpm:
        image: ${REGISTRY:-localhost}/site-dev-php-fpm:cache
        build:
            context: ./docker
            dockerfile: development/php-fpm/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/site-dev-php-fpm:cache
        environment:
            PHP_IDE_CONFIG: serverName=SITE
            APP_DEBUG: 1
            APP_ENV: dev
            APP_URL: http://localhost
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: site-mysql
            DB_NAME: app
            DB_USERNAME: app
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: site-mailer
            MAILER_PORT: 1025
            MAILER_USERNAME: app
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_ENCRYPTION: tcp
            MAILER_FROM_EMAIL: mail@app.test
            DEWORKER_API_URL: http://site-wiremock/api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        volumes:
            - ./:/app
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
    site-php-cli:
        image: ${REGISTRY:-localhost}/site-dev-php-cli:cache
        build:
            context: ./docker
            dockerfile: development/php-cli/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/site-dev-php-cli:cache
        environment:
            APP_DEBUG: 1
            APP_ENV: dev
            APP_URL: http://localhost
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: site-mysql
            DB_NAME: app
            DB_USERNAME: app
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: site-mailer
            MAILER_PORT: 1025
            MAILER_USERNAME: app
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_ENCRYPTION: tcp
            MAILER_FROM_EMAIL: mail@app.test
            DEWORKER_API_URL: http://site-wiremock/api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        volumes:
            - ./:/app
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        network_mode: service:site
    site-node-watch:
        image: node:16-alpine
        volumes:
            - ./:/app
        working_dir: /app
        command: sh -c 'until [ -f .ready ] ; do sleep 1 ; done && npm run watch'
    site-node-cli:
        image: node:16-alpine
        volumes:
            - ./:/app
        working_dir: /app
    site-mysql:
        image: mariadb:10
        volumes:
            - site-mysql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_USER: app
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
            MYSQL_DATABASE: app
        secrets:
            - db_password
        ports:
            - "33061:3306"
    site-mysql-backup:
        image: ${REGISTRY:-localhost}/site-dev-mysql-backup:cache
        build:
            context: ./docker/common
            dockerfile: mysql-backup/Dockerfile
            cache_from:
                - ${REGISTRY:-localhost}/site-dev-mysql-backup:cache
        environment:
            BACKUP_NAME: site-mysql
            MYSQL_HOST: site-mysql
            MYSQL_USER: app
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
            MYSQL_DB: app
            AWS_ACCESS_KEY_ID: app
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: region
            S3_ENDPOINT: http://site-storage:9000
            S3_BUCKET: backup
        secrets:
            - db_password
            - backup_aws_secret_access_key
        command: sh -c 'wait-for-it site-mysql:3306 -t 20 && backup'
    site-upload-backup:
        image: ${REGISTRY:-localhost}/site-dev-files-backup:cache
        build:
            context: ./docker/common/files-backup
            cache_from:
                - ${REGISTRY:-localhost}/site-dev-files-backup:cache
        environment:
            BACKUP_NAME: site-upload
            TARGET: /upload
            AWS_ACCESS_KEY_ID: app
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: region
            S3_ENDPOINT: http://site-storage:9000
            S3_BUCKET: backup
        secrets:
            - backup_aws_secret_access_key
        volumes:
            - ./public/upload:/upload:ro
    site-redis:
        image: ${REGISTRY:-localhost}/site-dev-redis:cache
        build:
            context: ./docker/common/redis
            cache_from:
                - ${REGISTRY:-localhost}/site-dev-redis:cache
        environment:
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
        secrets:
            - redis_password
        volumes:
            - site-redis:/data
    site-mailer:
        image: mailhog/mailhog
        ports:
            - "8082:8025"
    site-storage:
        image: minio/minio
        environment:
            MINIO_ROOT_USER: app
            MINIO_ROOT_PASSWORD: app_secret
        networks:
            - traefik-public
            - default
        volumes:
            - site-storage:/data
        entrypoint: sh -c 'mkdir -p /data/backup && minio server /data --console-address ":80"'
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.site-storage.rule=Host(`storage.localhost`)
            - traefik.http.routers.site-storage.entrypoints=http
            - traefik.http.services.site-storage.loadbalancer.server.port=80
    site-wiremock:
        image: rodolpheche/wiremock:latest-alpine
        volumes:
            - ./wiremock:/home/wiremock
        ports:
            - "8083:80"
        command:
            - '--port=80'
            - '--global-response-templating'
            - '--verbose'

secrets:
    cookie_secret:
        file: ./docker/secrets/cookie_secret
    db_password:
        file: ./docker/secrets/db_password
    redis_password:
        file: ./docker/secrets/redis_password
    mailer_password:
        file: ./docker/secrets/mailer_password
    sentry_dsn:
        file: ./docker/secrets/sentry_dsn
    backup_aws_secret_access_key:
        file: ./docker/secrets/backup_aws_secret_access_key

volumes:
    site-mysql:
    site-redis:
    site-storage:

networks:
    traefik-public:
        name: traefik-public
