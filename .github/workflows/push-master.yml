name: Pipeline

on:
    push:
        branches:
            - master

env:
    REGISTRY_HOST: ghcr.io
    IMAGE_TAG: master-${{ github.run_number }}

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v4

            -   name: Cache vendors
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: composer-${{ hashFiles('composer.lock') }}

            -   name: Cache node modules
                uses: actions/cache@v2
                with:
                    path: node_modules
                    key: yarn-${{ hashFiles('yarn.lock') }}

            -   name: Set registry env
                run:  echo "REGISTRY=${{ env.REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

            -   name: Docker login
                uses: azure/docker-login@v1
                with:
                    login-server: ${{ env.REGISTRY_HOST }}
                    username: ${{ github.actor }}
                    password: ${{ github.token }}

            -   name: Permissions
                run: sudo chown -R 1000:1000 .

            -   name: Init
                run: make init

            -   name: Push dev cache
                run: make push-dev-cache

            -   name: Valid
                run: make site-composer-validate

            -   name: Lint
                run: make site-lint

            -   name: Analyze
                run: make site-analyze

            -   name: Test
                run: make site-test-unit-integration

            -   name: Backup MySQL
                run: make site-backup-mysql

            -   name: Backup uploads
                run: make site-backup-upload

            -   name: Down
                run: make down

            -   name: Build
                run: make build

            -   name: Push build cache
                run: make push-build-cache

            -   name: Testing Build
                run: make testing-build

            -   name: Testing Push build cache
                run: make testing-push-build-cache

            -   name: Testing Init
                run: make testing-init

            -   name: Testing E2E
                run: make testing-e2e

            -   name: Archive test output
                uses: actions/upload-artifact@v1
                with:
                    name: test-output
                    path: tests/_output
                if: ${{ failure() }}

            -   name: Testing Down
                run: make try-testing-down-clear

            -   name: Push
                run: make push

    deploy:
        runs-on: ubuntu-latest
        needs: build

        steps:
            -   uses: actions/checkout@v4

            -   name: Install SSH key
                uses: shimataro/ssh-key-action@v2
                with:
                    key: ${{ secrets.DEPLOY_SSH_KEY }}
                    known_hosts: ${{ secrets.DEPLOY_HOST }}

            -   name: Secrets
                run: |
                    echo "${{ secrets.COOKIE_SECRET }}" > /tmp/cookie_secret
                    echo "${{ secrets.DB_PASSWORD }}" > /tmp/db_password
                    echo "${{ secrets.DB_ROOT_PASSWORD }}" > /tmp/db_root_password
                    echo "${{ secrets.REDIS_PASSWORD }}" > /tmp/redis_password
                    echo "${{ secrets.MAILER_PASSWORD }}" > /tmp/mailer_password
                    echo "${{ secrets.SENTRY_DSN }}" > /tmp/sentry_dsn
                    echo "${{ secrets.BACKUP_AWS_SECRET_ACCESS_KEY }}" > /tmp/backup_aws_secret_access_key

            -   name: Set registry env
                run:  echo "REGISTRY=${{ env.REGISTRY_HOST }}/${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

            -   name: Deploy
                run: make deploy
                env:
                    BUILD_NUMBER: ${{ github.run_number }}
                    HOST: ${{ secrets.DEPLOY_HOST }}
                    PORT: ${{ secrets.DEPLOY_PORT }}
                    COOKIE_SECRET_FILE: /tmp/cookie_secret
                    DB_ROOT_PASSWORD_FILE: /tmp/db_root_password
                    DB_PASSWORD_FILE: /tmp/db_password
                    REDIS_PASSWORD_FILE: /tmp/redis_password
                    MAILER_HOST: ${{ secrets.MAILER_HOST }}
                    MAILER_PORT: ${{ secrets.MAILER_PORT }}
                    MAILER_USERNAME: ${{ secrets.MAILER_USERNAME }}
                    MAILER_PASSWORD_FILE: /tmp/mailer_password
                    MAILER_FROM_EMAIL: ${{ secrets.MAILER_FROM_EMAIL }}
                    SENTRY_DSN_FILE: /tmp/sentry_dsn
                    BACKUP_AWS_ACCESS_KEY_ID: ${{ secrets.BACKUP_AWS_ACCESS_KEY_ID }}
                    BACKUP_AWS_SECRET_ACCESS_KEY_FILE: /tmp/backup_aws_secret_access_key
                    BACKUP_AWS_DEFAULT_REGION: ${{ secrets.BACKUP_AWS_DEFAULT_REGION }}
                    BACKUP_S3_ENDPOINT: ${{ secrets.BACKUP_S3_ENDPOINT }}
                    BACKUP_S3_BUCKET: ${{ secrets.BACKUP_S3_BUCKET }}
