version: '3.9'
services:
    site:
        image: ${REGISTRY}/site:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        volumes:
            - assets:/app/public/assets:ro
            - upload:/app/public/upload:ro
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.services.site.loadBalancer.server.port=80
                - traefik.http.routers.site.rule=Host(`elisdn.ru`) || Host(`www.elisdn.ru`)
                - traefik.http.middlewares.site-redirect.redirectRegex.regex=^(https?://)www\.elisdn\.ru/(.*)$$
                - traefik.http.middlewares.site-redirect.redirectRegex.replacement=$${1}elisdn.ru/$${2}
                - traefik.http.middlewares.site-redirect.redirectRegex.permanent=true
                - traefik.http.routers.site.middlewares=site-redirect,secure-headers
                - traefik.http.routers.site.entryPoints=https
                - traefik.http.routers.site.tls=true
                - traefik.http.routers.site.tls.certResolver=letsEncrypt
            replicas: 2
            update_config:
                parallelism: 1
                delay: 10s
            placement:
                constraints: [ node.role == manager ]

    site-php-fpm:
        image: ${REGISTRY}/site-php-fpm:${IMAGE_TAG}
        environment:
            APP_DEBUG: 0
            APP_ENV: prod
            APP_URL: https://elisdn.ru
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: site-mysql
            DB_NAME: app
            DB_USERNAME: app
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USERNAME: ${MAILER_USERNAME}
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_FROM_EMAIL: ${MAILER_FROM_EMAIL}
            DEWORKER_API_URL: https://api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        volumes:
            - assets:/app/public/assets
            - upload:/app/public/upload
        deploy:
            replicas: 2
            update_config:
                parallelism: 1
                delay: 20s
            placement:
                constraints: [ node.role == manager ]

    site-migration:
        image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
        environment:
            APP_DEBUG: 0
            APP_ENV: prod
            APP_URL: https://elisdn.ru
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: site-mysql
            DB_NAME: app
            DB_USERNAME: app
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USERNAME: ${MAILER_USERNAME}
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_FROM_EMAIL: ${MAILER_FROM_EMAIL}
            DEWORKER_API_URL: https://api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        volumes:
            - assets:/app/public/assets
            - upload:/app/public/upload
        command: sh -c "wait-for-it site-mysql:3306 -t 60 && php bin/app.php migrate --interactive=0"
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 5
                window: 120s
            placement:
                constraints: [ node.role == manager ]

    site-cache-flush:
        image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
        environment:
            APP_DEBUG: 0
            APP_ENV: prod
            APP_URL: https://elisdn.ru
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: site-mysql
            DB_NAME: app
            DB_USERNAME: app
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USERNAME: ${MAILER_USERNAME}
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_FROM_EMAIL: ${MAILER_FROM_EMAIL}
            DEWORKER_API_URL: https://api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        volumes:
            - assets:/app/public/assets
            - upload:/app/public/upload
        command: sh -c "wait-for-it site-redis:6379 -t 60 && php bin/app.php cache/flush cache --interactive=0"
        deploy:
            update_config:
                delay: 40s
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 5
                window: 120s
            placement:
                constraints: [ node.role == manager ]

    site-mysql:
        image: mariadb:11
        environment:
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
            MYSQL_USER: app
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
            MYSQL_DATABASE: app
        secrets:
            - db_root_password
            - db_password
        volumes:
            - mysql:/var/lib/mysql
        deploy:
            placement:
                constraints: [ node.labels.db == db ]
            endpoint_mode: dnsrr

    site-mysql-backup:
        image: ${REGISTRY}/site-mysql-backup:${IMAGE_TAG}
        volumes:
            - mysql-backup:/app
        environment:
            BACKUP_NAME: site-mysql
            MYSQL_HOST: site-mysql
            MYSQL_USER: app
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
            MYSQL_DB: app
            AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: ${BACKUP_AWS_DEFAULT_REGION}
            S3_ENDPOINT: ${BACKUP_S3_ENDPOINT}
            S3_BUCKET: ${BACKUP_S3_BUCKET}
        secrets:
            - db_password
            - backup_aws_secret_access_key
        command: sh -c "wait-for-it site-mysql:3306 -t 60 && backup"
        deploy:
            labels:
                - swarm.cronjob.enable=true
                - swarm.cronjob.schedule=0 */3 * * *
                - swarm.cronjob.skip-running=true
            replicas: 0
            restart_policy:
                condition: none

    site-upload-backup:
        image: ${REGISTRY}/site-files-backup:${IMAGE_TAG}
        environment:
            BACKUP_NAME: site-upload
            TARGET: /upload
            AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: ${BACKUP_AWS_DEFAULT_REGION}
            S3_ENDPOINT: ${BACKUP_S3_ENDPOINT}
            S3_BUCKET: ${BACKUP_S3_BUCKET}
        secrets:
            - backup_aws_secret_access_key
        volumes:
            - upload:/upload:ro
            - upload-backup:/app
        deploy:
            labels:
                - swarm.cronjob.enable=true
                - swarm.cronjob.schedule=30 0 */2 * *
                - swarm.cronjob.skip-running=true
            replicas: 0
            restart_policy:
                condition: none
            placement:
                constraints: [ node.role == manager ]

    site-redis:
        image: ${REGISTRY}/site-redis:${IMAGE_TAG}
        environment:
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
        secrets:
            - redis_password
        volumes:
            - redis:/data
        command:
            - 'redis-server'
            - '--maxmemory 32mb'
            - '--maxmemory-policy allkeys-lru'
        deploy:
            placement:
                constraints: [ node.labels.db == db ]
            endpoint_mode: dnsrr

secrets:
    cookie_secret:
        file: ${COOKIE_SECRET_FILE}
    db_password:
        file: ${DB_PASSWORD_FILE}
    db_root_password:
        file: ${DB_ROOT_PASSWORD_FILE}
    redis_password:
        file: ${REDIS_PASSWORD_FILE}
    mailer_password:
        file: ${MAILER_PASSWORD_FILE}
    sentry_dsn:
        file: ${SENTRY_DSN_FILE}
    backup_aws_secret_access_key:
        file: ${BACKUP_AWS_SECRET_ACCESS_KEY_FILE}

volumes:
    assets:
    upload:
    upload-backup:
    mysql:
    mysql-backup:
    redis:

networks:
    traefik-public:
        external: true
