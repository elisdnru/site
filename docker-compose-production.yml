version: '3.9'
services:
    site:
        image: ${REGISTRY}/site:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        volumes:
            - site-assets:/app/public/assets:ro
            - site-upload:/app/public/upload:ro
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.services.site.loadbalancer.server.port=80
                - traefik.http.routers.site.rule=Host(`elisdn.ru`) || Host(`www.elisdn.ru`)
                - traefik.http.middlewares.site-redirect.redirectregex.regex=^(https?://)www.elisdn.ru/(.*)$$
                - traefik.http.middlewares.site-redirect.redirectregex.replacement=$${1}elisdn.ru$${2}
                - traefik.http.middlewares.site-redirect.redirectregex.permanent=true
                - traefik.http.routers.site.middlewares=site-redirect
                - traefik.http.routers.site.entrypoints=https
                - traefik.http.routers.site.tls=true
                - traefik.http.routers.site.tls.certresolver=letsencrypt
            replicas: 2
            update_config:
                parallelism: 1
                delay: 10s
            placement:
                constraints: [ node.role == manager ]
    site-php-fpm:
        image: ${REGISTRY}/site-php-fpm:${IMAGE_TAG}
        environment:
            APP_DEBUG: 0
            APP_ENV: prod
            APP_URL: https://elisdn.ru
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: ${DB_HOST}
            DB_NAME: ${DB_NAME}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USER: ${MAILER_USER}
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_ENCRYPTION: tls
            MAILER_FROM_EMAIL: ${MAILER_FROM_EMAIL}
            DEWORKER_API_URL: https://api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        volumes:
            - site-assets:/app/public/assets
            - site-upload:/app/public/upload
        deploy:
            replicas: 2
            update_config:
                parallelism: 1
                delay: 10s
            placement:
                constraints: [ node.role == manager ]
    site-migration:
        image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
        environment:
            APP_DEBUG: 0
            APP_ENV: prod
            APP_URL: https://elisdn.ru
            COOKIE_SECRET_FILE: /run/secrets/cookie_secret
            DB_HOST: ${DB_HOST}
            DB_NAME: ${DB_NAME}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD_FILE: /run/secrets/db_password
            REDIS_HOST: site-redis
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
            MAILER_HOST: ${MAILER_HOST}
            MAILER_PORT: ${MAILER_PORT}
            MAILER_USER: ${MAILER_USER}
            MAILER_PASSWORD_FILE: /run/secrets/mailer_password
            MAILER_ENCRYPTION: tls
            MAILER_FROM_EMAIL: ${MAILER_FROM_EMAIL}
            DEWORKER_API_URL: https://api.deworker.pro
            SENTRY_DSN_FILE: /run/secrets/sentry_dsn
        secrets:
            - cookie_secret
            - db_password
            - redis_password
            - mailer_password
            - sentry_dsn
        volumes:
            - site-assets:/app/public/assets
            - site-upload:/app/public/upload
        command: sh -c "wait-for-it ${DB_HOST}:3306 -t 60 && php bin/app.php migrate --interactive=0"
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 5
                window: 120s
            placement:
                constraints: [ node.role == manager ]
    site-mysql-backup:
        image: ${REGISTRY}/site-mysql-backup:${IMAGE_TAG}
        environment:
            BACKUP_NAME: site-mysql
            MYSQL_HOST: ${DB_HOST}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD_FILE: /run/secrets/db_password
            MYSQL_DB: ${DB_NAME}
            AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: ${BACKUP_AWS_DEFAULT_REGION}
            S3_ENDPOINT: ${BACKUP_S3_ENDPOINT}
            S3_BUCKET: ${BACKUP_S3_BUCKET}
        secrets:
            - db_password
            - backup_aws_secret_access_key
        command: sh -c "wait-for-it ${DB_HOST}:3306 -t 60 && backup"
        deploy:
            labels:
                - swarm.cronjob.enable=true
                - swarm.cronjob.schedule=0 * * * *
                - swarm.cronjob.skip-running=true
            replicas: 0
            restart_policy:
                condition: none
    site-upload-backup:
        image: ${REGISTRY}/site-files-backup:${IMAGE_TAG}
        environment:
            BACKUP_NAME: site-upload
            TARGET: /upload
            AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY_FILE: /run/secrets/backup_aws_secret_access_key
            AWS_DEFAULT_REGION: ${BACKUP_AWS_DEFAULT_REGION}
            S3_ENDPOINT: ${BACKUP_S3_ENDPOINT}
            S3_BUCKET: ${BACKUP_S3_BUCKET}
        secrets:
            - backup_aws_secret_access_key
        volumes:
            - site-upload:/upload:ro
        deploy:
            labels:
                - swarm.cronjob.enable=true
                - swarm.cronjob.schedule=30 0 * * *
                - swarm.cronjob.skip-running=true
            replicas: 0
            restart_policy:
                condition: none
            placement:
                constraints: [ node.role == manager ]
    site-redis:
        image: ${REGISTRY}/site-redis:6.2
        environment:
            REDIS_PASSWORD_FILE: /run/secrets/redis_password
        secrets:
            - redis_password
        volumes:
            - site-redis:/data
        deploy:
            placement:
                constraints: [ node.labels.db == db ]
            endpoint_mode: dnsrr

secrets:
    cookie_secret:
        file: ./secrets/cookie_secret
    db_password:
        file: ./secrets/db_password
    redis_password:
        file: ./secrets/redis_password
    mailer_password:
        file: ./secrets/mailer_password
    sentry_dsn:
        file: ./secrets/sentry_dsn
    backup_aws_secret_access_key:
        file: ./secrets/backup_aws_secret_access_key

volumes:
    site-assets:
    site-upload:
    site-redis:

networks:
    traefik-public:
        external: true
